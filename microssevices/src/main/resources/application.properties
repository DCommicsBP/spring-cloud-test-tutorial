server.port=8761
eureka.instance.hostname=localhost
eureka.client.registerWithEureka=false
eureka.client.fetchRegistry=false
eureka.client.serviceURl.defaultZone=http://localhost:8761/eureka/

#import org.springframework.web.filter.CorsFilter;
#
#@Configuration
#public class CorsFilterConfiguration {
#
#    @Bean
#    public FilterRegistrationBean corsFilter() {
#        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
#        CorsConfiguration config = new CorsConfiguration();
#        config.setAllowCredentials(true);
#        config.addAllowedOrigin("*");
#        config.addAllowedHeader("*");
#        config.addAllowedMethod("*");
#        source.registerCorsConfiguration("/**", config);
#        FilterRegistrationBean bean = new FilterRegistrationBean(new CorsFilter(source));
#        bean.setOrder(Ordered.HIGHEST_PRECEDENCE);
#        return bean;
#    }https://coderef.com.br/arquitetura-de-microservices-com-spring-cloud-e-spring-boot-parte-4-ca4e02775f2f
#https://coderef.com.br/arquitetura-de-microservices-com-spring-cloud-e-spring-boot-parte-5-971bc068fe70
